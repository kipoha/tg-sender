version: '3.8'
services:
  back: &back
    container_name: backend
    build: 
      context: ../../
      dockerfile: devops/Dockerfile
    volumes:
      - ../../:/opt/services/backend/
    env_file:
      - ../../.env
    ports:
      - "8000:8000" 
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic
      --no-input && gunicorn config.wsgi:application --bind 0.0.0.0:8000 --log-level info"
    networks:
      - main_network
      - nginx_network
      
  db:
    image: postgres:15-alpine
    container_name: db
    restart: unless-stopped
    volumes:
      - ../../storage:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - main_network
    env_file:
      - ../../.env

  celery_worker:
    <<: *back
    restart: unless-stopped
    ports: []
    container_name: celery_worker
    command: celery -A config worker -l info --beat
  
  celery_beat:
    <<: *back
    restart: unless-stopped
    ports: []
    container_name: celery_beat
    command: celery -A config beat --loglevel=INFO

  redis:
    restart: always
    image: redis:alpine
    container_name: redis
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    ports:
    - "6379:6379"
    networks:
      - main_network


networks:
  main_network:
    driver: bridge
  nginx_network:
    driver: bridge
